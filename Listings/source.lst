C51 COMPILER V9.60.0.0   SOURCE                                                            05/28/2021 18:25:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SOURCE
OBJECT MODULE PLACED IN .\Objects\source.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\source.lst) TABS(2) OBJECT(.\Objects\source.obj)

line level    source

   1          #include<reg51.h>
   2          #include<string.h>
   3          
   4          // ______Motor Control's_______
   5          sbit door_open = P2^0;
   6          sbit door_close = P2^1;
   7          void gate(int open, int close);
   8          
   9          // ________LCD port pin________ 
  10          //_register state controller pin
  11          sbit rs = P2^5;
  12          // read and write pin
  13          sbit rw = P2^6; 
  14          // enable pin (Enable pin; latchs data_from the data_ pins)
  15          sbit en = P2^7; 
  16          
  17          // ________LCD commands________
  18          // func passing a character to lcd D0 to D7 pins
  19          unsigned int i = 0;
  20          void lcd_data(unsigned char);
  21          // func to pass commands to our lcd
  22          void lcd_cmd(unsigned char);
  23          // To display text on the lcd screen
  24          void display(char* text, int clearPreviousText, unsigned int delayBy);
  25          // init lcd with  basic commands
  26          void init_lcd();
  27          // init serial ports of 8051 microcontroller
  28          void serial_init() {
  29   1        SCON = 0x50;
  30   1        TMOD = 0x20;
  31   1        TH1 = -3;   // baud_rate = 9600
  32   1        TR1 = 1;
  33   1      }
  34          
  35          
  36          // _________Core functions_________
  37          // check func checks a card's rfid with the rfid's in our list
  38          int check();
  39          // list of rfid's
  40          const char* id[] = {"a2Gp5n8iK79g", "7Hie72n6Fl3w", "9O2nId0KEm23", "k20dl2uGn49n"};
  41          // delay func delay's the excetion of our program
  42          void delay(float V) {
  43   1        for (i = 0; i < V * 1526; i++) {}
  44   1      }
  45          // var's to store rfid as chars
  46          char rfid[12], ch = 0;
  47          // rxdata is a func to recieve data from the virtual terminal 
  48          char rxdata() {
  49   1        while(!RI);
  50   1        ch = SBUF;    
  51   1        RI=0;
  52   1        return ch;
  53   1      }
  54          
C51 COMPILER V9.60.0.0   SOURCE                                                            05/28/2021 18:25:22 PAGE 2   

  55          
  56          
  57          // P1 connects all D0 to D7 data_pins of lcd
  58          void lcd_data(unsigned char ch) {
  59   1        P1 = ch;
  60   1        rs = 1;
  61   1        en = 1;
  62   1        delay(0.015);
  63   1        en = 0;
  64   1      }
  65          
  66          void lcd_cmd(unsigned char ch) {
  67   1        P1 = ch; 
  68   1        rs = 0;
  69   1        en = 1;
  70   1        delay(0.2);
  71   1        en = 0;
  72   1      }
  73          
  74          /*
  75           * 56 | 0x38 command intializes 8_bit 2 line 5x7 matrix (dots) 
  76           * 01 | 0x01 command clear's screen
  77           * 16 | 0x10 command shift's cursor position from left to right
  78           * 12 | 0x0C command ON's display and OFF's cursor;
  79           * 128| 0x80 command that set's DDRam address (set cursor position) to LCD display
  80           */
  81          void init_lcd() {
  82   1        rw = 0;
  83   1        lcd_cmd(0x38); 
  84   1        lcd_cmd(0x01); 
  85   1        lcd_cmd(0x10); 
  86   1        lcd_cmd(0x0C); 
  87   1        lcd_cmd(0x80);
  88   1      }
  89          
  90          // this function is used for a better user experience
  91          void loading_display(char* str) {
  92   1        delay(0.5);
  93   1        display(str, 1, 2.0);
  94   1        display(".", 0, 1.7);
  95   1        display(".", 0, 1.4);
  96   1        display(".", 0, 1);
  97   1        display(".", 0, 0.5);
  98   1      }
  99          
 100          void main() {
 101   1        init_lcd();
 102   1        serial_init();
 103   1        loading_display("Starting");
 104   1        while(1){
 105   2          delay(0.7);
 106   2          display(" PLEASE__VERIFY", 1, 0);
 107   2          lcd_cmd(0xc4);
 108   2          display("YOUR ID:", 0, 3);
 109   2          display("Swipe your card: ", 1, 4); 
 110   2          for(i = 0; i < 12; i++)
 111   2            rfid[i] = rxdata();
 112   2          rfid[i] = '\0';
 113   2          if (check()) {
 114   3            loading_display("DOOR_OPENING");
 115   3            gate(1, 0);
 116   3            delay(2);
C51 COMPILER V9.60.0.0   SOURCE                                                            05/28/2021 18:25:22 PAGE 3   

 117   3            gate(0, 0);
 118   3            delay(5);
 119   3            loading_display("DOOR_CLOSING");
 120   3            gate(0 ,1);
 121   3            delay(2);
 122   3            gate(0, 0);
 123   3          } else {
 124   3            display("CANNOT VERIFY ID", 1, 2);
 125   3            lcd_cmd(0xc3);
 126   3            display("TRY AGAIN!", 0, 4);
 127   3          }
 128   2        }
 129   1      }
 130          
 131          void display(char *str, int clearPreviousText, unsigned int delayBy) {
 132   1        if (clearPreviousText >= 1)
 133   1          lcd_cmd(0x01);
 134   1        while(*str)
 135   1          lcd_data(*str++);
 136   1        delay(delayBy);
 137   1      }
 138          
 139          int check() {
 140   1        unsigned char i = 0;
 141   1        loading_display("VERIFYING");
 142   1        for (i = 0; i < 4; i++)
 143   1          if (memcmp(rfid, id[i], 12) == 0)
 144   1            return 1;
 145   1        return 0;
 146   1      }
 147          
 148          void gate(int open, int close) {
 149   1        door_open = open;
 150   1        door_close = close;
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    646    ----
   CONSTANT SIZE    =    170    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
